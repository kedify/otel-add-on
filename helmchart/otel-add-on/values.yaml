#otel-add-on:
#------------
replicaCount: 1

image:
  # -- Image to use for the Deployment
  repository: ghcr.io/kedify/otel-add-on
  # -- Image pull policy, consult https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  pullPolicy: Always
  # -- Image version to use for the Deployment, if not specified, it defaults to `.Chart.AppVersion`
  tag: ""

settings:
  # -- how long the metrics should be kept in the short term (in memory) storage
  metricStoreRetentionSeconds: 120

  # -- how often (in milliseconds) should the IsActive method be tried
  isActivePollingIntervalMilliseconds: 500

  # -- internal (mostly golang) metrics will be exposed on `:8080/metrics`
  internalMetricsPort: 8080

  # -- port where rest api should be listening
  restApiPort: 9090

  logs:
    # -- Can be one of 'debug', 'info', 'error', or any integer value > 0
    # which corresponds to custom debug levels of increasing verbosity
    logLvl: info

    # -- one of: info, error, panic
    stackTracesLvl: error

    # -- if anything else than 'false', the log will not contain colors
    noColor: false

    # -- if anything else than 'false', the log will not print the ascii logo
    noBanner: false

# -- should the ascii logo be printed when this helm chart is installed
asciiArt: true

# -- details: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- should the service account be also created and linked in the deployment
  create: true
  automount: true
  # -- further custom annotation that will be added on the service account
  annotations: {}
  # -- name of the service account, defaults to `otel-add-on.fullname` ~ release name if not overriden
  name: ""

# -- additional custom pod annotations that will be used for pod
podAnnotations: {}

# -- additional custom pod labels that will be used for pod
podLabels: {}

# -- details: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext: {}

securityContext:
  capabilities:
    drop:
      - ALL
  # -- details: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  readOnlyRootFilesystem: true
  # -- details: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#implicit-group-memberships-defined-in-etc-group-in-the-container-image
  runAsNonRoot: true
  # -- details: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#implicit-group-memberships-defined-in-etc-group-in-the-container-image
  runAsUser: 1000

service:
  # -- Under this service, the otel add on needs to be reachable by KEDA operator and OTEL collector,
  # details: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # -- OTLP receiver will be opened on this port. OTEL exporter configured in the OTEL collector needs to have this value set.
  otlpReceiverPort: 4317
  # -- KEDA external scaler will be opened on this port. ScaledObject's `.spec.triggers[].metadata.scalerAddress` needs to be set to this svc and this port.
  kedaExternalScalerPort: 4318

# -- https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources:
  limits:
    # -- cpu limit for the pod, enforced by cgroups
    cpu: 500m
    # -- memory limit for the pod, used by oomkiller
    memory: 256Mi
  requests:
    # -- cpu request for the pod, used by k8s scheduler
    cpu: 500m
    # -- memory request for the pod, used by k8s scheduler
    memory: 128Mi

volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- details: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
nodeSelector: {}

# -- details: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
tolerations: []

# -- details: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

#otel collector helm chart:
# https://github.com/open-telemetry/opentelemetry-helm-charts/blob/main/charts/opentelemetry-collector/values.yaml
#--------------------------
opentelemetry-collector:
  enabled: true
  mode: deployment
  image:
    repository: otel/opentelemetry-collector-k8s
  fullnameOverride: otelcol

  ports:
    jaeger-compact: null
    jaeger-thrift: null
    jaeger-grpc: null
    zipkin: null
    otlp: null
    otlp-http: null
    opencensus:
      enabled: true
      containerPort: 55678
      servicePort: 55678
      hostPort: 55678
      protocol: TCP

  config:
    receivers:
      # https://grafana.com/docs/alloy/latest/reference/components/otelcol/otelcol.receiver.opencensus/
      opencensus:
        endpoint: 0.0.0.0:55678
        include_metadata: true
      prometheus: null
      zipkin: null
      jaeger: null
      otlp: null
    exporters:
      otlp:
        # make sure this is the same hostname and port as .service
        endpoint: keda-otel-scaler:4317
#        endpoint: host.k3d.internal:4317
        compression: "none"
        tls:
          insecure: true
        #   tls:
        #     cert_file: file.cert
        #     key_file: file.key
      debug:
        verbosity: detailed
    processors:
      filter/ottl:
        error_mode: ignore
        metrics:
          # runtime/service_invocation/req_sent_total
          metric:
            - | # drop all other metrics that are not whitelisted here
              name != "http/client/completed_count" and
              name != "http/server/request_count" and
              name != "runtime/service_invocation/res_sent_total"

            - resource.attributes["app_id"] == "nodeapp" # drop all metrics w/o the app_id = nodeapp tag on them

            # - not (IsMatch(name, "http/client/*")) # drop all metrics that don't start w/ http/client/
            # more here: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/ottl/LANGUAGE.md & https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/pkg/ottl/ottlfuncs
            # - 'type != METRIC_DATA_TYPE_GAUGE' # drop all non-gauges

    # debug/profiling
    # extensions:
    #   pprof:
    #     endpoint: :1888
    #   zpages:
    #     endpoint: :55679

    service:
      # extensions: [pprof, zpages]
      pipelines:
        traces: null
        logs: null
        metrics:
          receivers:
            - opencensus
          processors:
            - filter/ottl
          exporters:
            - debug
            - otlp
