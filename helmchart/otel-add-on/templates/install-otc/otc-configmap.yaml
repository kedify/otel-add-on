{{- range include "operatorCrs" . | fromJsonArray }}
{{- if .enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .name | default $.Release.Name }}
  namespace: {{ $.Release.Namespace }}
  annotations:
    helm.sh/hook: "post-install,post-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
    helm.sh/hook-weight: "-2"
data:
  content: |
    apiVersion: opentelemetry.io/v1beta1
    kind: OpenTelemetryCollector
    metadata:
      name: {{ .name | default $.Release.Name }}
      {{- if .targetAllocatorEnabled }}
      namespace: {{ default $.Release.Namespace }}
      {{- else }}
      namespace: {{ .namespace | default $.Release.Namespace }}
      {{- end }}
      labels:
        meta.helm.sh/release-name: {{ $.Release.Name }}
        helm.sh/chart: {{ $.Chart.Version }}
    spec:
      resources:
        {{- toYaml .resources | nindent 8 }}
      {{- if and .targetAllocatorEnabled (eq .mode "sidecar") }}
      mode: statefulset
      {{- else }}
      mode: {{ .mode }}
      {{- end}}
      {{- with .serviceAccount.name }}
      serviceAccount: {{ . }}
      {{- end }}
      upgradeStrategy: none
      {{- with .env }}
      env:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .envFrom }}
      envFrom:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if .targetAllocatorEnabled }}
      targetAllocator:
        {{- toYaml .targetAllocator | nindent 8 }}
      {{- end }}

      config:
        {{- if .alternateOtelConfig }}
        {{- toYaml .alternateOtelConfig | nindent 8 }}
        {{- else}}

        {{- $extensions := list }}
        {{- with .alternateExtensions }}
        extensions:
        {{- range $extension, $extensionCfg := . }}
          {{- $extensions = append $extensions $extension }}
          {{ $extension }}:
            {{- toYaml $extensionCfg | nindent 12 }}
        {{- end }}
        {{- end }}

        {{- $receivers := list }}
        receivers:
        {{- if .alternateReceivers }}
        {{- range $receiver, $receiverCfg := .alternateReceivers }}
          {{- $receivers = append $receivers $receiver }}
          {{ $receiver }}:
            {{- toYaml $receiverCfg | nindent 12 }}
        {{- end }}
        {{- else}}
        {{- if or .targetAllocatorEnabled .prometheusScrapeConfigs }}
          prometheus:
            config:
              scrape_configs:
        {{- $receivers = append $receivers "prometheus" }}
        {{- if .targetAllocatorEnabled }}
              - job_name: 'otel-collector'
                scrape_interval: 10s
                static_configs:
                - targets: [ '0.0.0.0:8888' ]
                metric_relabel_configs:
                - action: labeldrop
                  regex: (id|name)
                - action: labelmap
                  regex: label_(.+)
                  replacement: $$1
        {{- else }}
        {{- with .prometheusScrapeConfigs }}
              {{- toYaml . | nindent 14 }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- $processors := list }}
        processors:
          {{- $processors = append $processors "resourcedetection/env" }}
          resourcedetection/env:
            detectors: [env]
            timeout: 2s
            override: false

          {{- $processors = append $processors "transform" }}
          transform:
            metric_statements:
              - context: datapoint
                statements:
                  - set(attributes["namespace"], resource.attributes["k8s.namespace.name"])
                  - set(attributes["pod"], resource.attributes["k8s.pod.name"])
                  - set(attributes["deployment"], resource.attributes["k8s.deployment.name"])

          {{- with .includeMetrics}}
          {{- $processors = append $processors "filter/metrics" }}
          filter/metrics:
            metrics:
              include:
                match_type: strict
                metric_names:
                  {{- range . }}
                  - {{ . }}
                  {{- end }}
          {{- end }}

          {{- with .metricsgeneration.rules }}
          {{- $processors = append $processors "metricsgeneration" }}
          metricsgeneration:
            rules:
              {{- toYaml . | nindent 14 }}
          {{- end }}
        exporters:
          otlp/keda:
            endpoint: {{ $.Release.Name }}.{{ $.Values.namespace | default $.Release.Namespace }}.svc:4317
            compression: "none"
            tls:
              insecure: true
          {{- if .debug }}
          debug:
            verbosity: detailed
          {{- end }}
        service:
          {{- with $extensions }}
          extensions: [{{- join "," . -}}]
          {{- end }}
          pipelines:
            metrics:
              receivers: [{{- join "," $receivers -}}]
              processors: [{{- join "," $processors -}}]
              exporters: [{{- if .debug -}}debug, {{- end -}}otlp/keda]
        {{- end }}
---
{{- end }}
{{- end }}
