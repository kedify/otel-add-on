{{- range $i, $c := include "operatorCrs" . | fromJsonArray }}
{{- if $c.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $c.name | default $.Values.fullnameOverride | default (printf "%s-%d" $.Release.Name $i) }}
  namespace: {{ $.Release.Namespace }}
  annotations:
    helm.sh/hook: "post-install,post-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
    helm.sh/hook-weight: "-2"
data:
  content: |
    apiVersion: opentelemetry.io/v1beta1
    kind: OpenTelemetryCollector
    metadata:
      name: {{ $c.name | default $.Values.fullnameOverride | default (printf "%s-%d" $.Release.Name $i) }}
      {{- if $c.targetAllocatorEnabled }}
      namespace: {{ default $.Release.Namespace }}
      {{- else }}
      namespace: {{ $c.namespace | default $.Release.Namespace }}
      {{- end }}
      labels:
        meta.helm.sh/release-name: {{ $.Release.Name }}
        helm.sh/chart: {{ $.Chart.Version }}
    spec:
      resources:
        {{- toYaml $c.resources | nindent 8 }}
      {{- if and $c.targetAllocatorEnabled (eq $c.mode "sidecar") }}
      mode: statefulset
      {{- else }}
      mode: {{ $c.mode }}
      {{- end}}
      {{- with ($c.serviceAccount).name }}
      serviceAccount: {{ . }}
      {{- end }}
      upgradeStrategy: none
      {{- with $c.env }}
      env:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $c.envFrom }}
      envFrom:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $c.imagePullPolicy }}
      imagePullPolicy: {{ . }}
      {{- end }}

      {{- if $c.targetAllocatorEnabled }}
      targetAllocator:
        {{- toYaml $c.targetAllocator | nindent 8 }}
      {{- end }}
      volumes:
      {{- range ($c.tls).secrets }}
        - name: {{ .name }}
          secret:
            defaultMode: 420
            secretName: {{ .name }}
      {{- end }}
      {{- with $c.volumes }}
        {{- toYaml . | nindent 8 -}}
      {{- end }}
      volumeMounts:
      {{- range ($c.tls).secrets }}
        - mountPath: {{ .mountPath }}
          name: {{ .name }}
          readOnly: true
      {{- end }}
      {{- with $c.volumeMounts }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- range list "volumeClaimTemplates" "lifecycle" "nodeSelector" "podAnnotations" "podSecurityContext" "securityContext" "topologySpreadConstraints" "tolerations" }}
      {{ . }}:
        {{- toYaml (get $c .) | nindent 8 -}}
      {{- end }}

      config:
        {{- if $c.alternateOtelConfig }}
        {{- toYaml $c.alternateOtelConfig | nindent 8 }}
        {{- else}}

        {{- $extensions := list }}
        {{- with $c.alternateExtensions }}
        extensions:
        {{- range $extension, $extensionCfg := . }}
          {{- $extensions = append $extensions $extension }}
          {{ $extension }}:
            {{- toYaml $extensionCfg | nindent 12 }}
        {{- end }}
        {{- end }}

        {{- $receivers := list }}
        receivers:
        {{- if $c.alternateReceivers }}
        {{- range $receiver, $receiverCfg := $c.alternateReceivers }}
          {{- $receivers = append $receivers $receiver }}
          {{ $receiver }}:
            {{- toYaml $receiverCfg | nindent 12 }}
        {{- end }}
        {{- else}}
        {{- if or $c.targetAllocatorEnabled $c.prometheusScrapeConfigs }}
          prometheus:
            config:
              scrape_configs:
        {{- $receivers = append $receivers "prometheus" }}
        {{- if $c.targetAllocatorEnabled }}
              - job_name: 'otel-collector'
                scrape_interval: 10s
                static_configs:
                - targets: [ '0.0.0.0:8888' ]
                metric_relabel_configs:
                - action: labeldrop
                  regex: (id|name)
                - action: labelmap
                  regex: label_(.+)
                  replacement: $$1
        {{- else }}
        {{- with $c.prometheusScrapeConfigs }}
              {{- toYaml . | nindent 14 }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- $processors := list }}
        processors:
          {{- $processors = append $processors "resourcedetection/env" }}
          resourcedetection/env:
            detectors: [env]
            timeout: 2s
            override: false

          {{- $processors = append $processors "transform" }}
          transform:
            metric_statements:
              - context: datapoint
                statements:
                  - set(attributes["namespace"], resource.attributes["k8s.namespace.name"])
                  - set(attributes["pod"], resource.attributes["k8s.pod.name"])
                  - set(attributes["deployment"], resource.attributes["k8s.deployment.name"])

          {{- with $c.includeMetrics}}
          {{- $processors = append $processors "filter/metrics" }}
          filter/metrics:
            metrics:
              include:
                match_type: strict
                metric_names:
                  {{- range . }}
                  - {{ . }}
                  {{- end }}
          {{- end }}

          {{- with ($c.metricsgeneration).rules }}
          {{- $processors = append $processors "metricsgeneration" }}
          metricsgeneration:
            rules:
              {{- toYaml . | nindent 14 }}
          {{- end }}
        {{- $exporters := list }}
        exporters:
        {{- if $c.alternateExporters }}
        {{- range $exporter, $exporterCfg := .alternateExporters }}
          {{- $exporters = append $exporters $exporter }}
          {{ $exporter }}:
            {{- toYaml $exporterCfg | nindent 12 }}
        {{- end }}
        {{- else}}
          {{- $exporters = append $exporters "otlp/keda" }}
          otlp/keda:
            endpoint: {{ $.Values.service.name | default $.Values.fullnameOverride | default $.Release.Name }}.{{ $.Values.namespace | default $.Release.Namespace }}.svc:4317
            compression: "none"
            tls:
              {{- if or ($c.tls).caFile (and ($c.tls).certFile ($c.tls).keyFile) }}
              insecure: false
                {{- if not $c.tls.caFile }}
              insecure_skip_verify: true
                {{- else }}
              ca_file: {{ $c.tls.caFile }}
                {{- end }}
              cert_file: {{ $c.tls.certFile }}
              key_file: {{ $c.tls.keyFile }}
              {{- with $c.tls.extraSettings }}
              {{- toYaml . | nindent 14 }}
              {{- end }}
              {{- else }}
              insecure: true
              {{- end }}
          {{- if $c.debug }}
          {{- $exporters = append $exporters "debug" }}
          debug:
            verbosity: detailed
          {{- end }}
        {{- end }}

        {{- $connectors := list }}
        {{- with $c.alternateConnectors }}
        connectors:
        {{- range $connector, $connectorCfg := . }}
          {{- $connectors = append $connectors $connector }}
          {{ $connector }}:
            {{- toYaml $connectorCfg | nindent 12 }}
        {{- end }}
        {{- end }}

        service:
          {{- with $extensions }}
          extensions: [{{- join "," . -}}]
          {{- end }}
          pipelines:
            {{- if $c.alternatePipelines }}
            {{- toYaml $c.alternatePipelines | nindent 12 }}
            {{- else}}
            metrics:
              receivers: [{{- join "," $receivers -}}]
              processors: [{{- join "," $processors -}}]
              exporters: [{{- join "," $exporters -}}]
            {{- end }}
        {{- end }}
---
{{- end }}
{{- end }}
